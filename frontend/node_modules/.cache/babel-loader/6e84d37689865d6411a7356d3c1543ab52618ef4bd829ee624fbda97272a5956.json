{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import employeeService from '../services/employeeService';\n// import EmployeeCard from './EmployeeCard';\n// import { Grid, CircularProgress, Typography, Box, TextField } from '@mui/material';\n\n// const EmployeeList = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [searchSalary, setSearchSalary] = useState('');\n\n//   useEffect(() => {\n//     fetchEmployees();\n//   }, []);\n\n//   const fetchEmployees = async () => {\n//     try {\n//       setLoading(true);\n//       const response = await employeeService.getAllEmployees();\n//       setEmployees(response.data);\n//       setError(null);\n//     } catch (error) {\n//       setError('Failed to fetch employees. Please try again later.');\n//       console.error('Error fetching employees:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const calculateSalaryStats = (employees) => {\n//     const totalSalary = employees.reduce((sum, emp) => sum + emp.salary, 0);\n//     const averageSalary = (totalSalary / employees.length).toFixed(2);\n//     const highestSalary = Math.max(...employees.map(emp => emp.salary));\n//     return { totalSalary, averageSalary, highestSalary };\n//   };\n\n//   const { totalSalary, averageSalary, highestSalary } = calculateSalaryStats(employees);\n\n//   const filteredEmployees = employees.filter(emp => emp.salary.toString().includes(searchSalary));\n\n//   return (\n//     <div className=\"container mt-4\">\n//       <Typography variant=\"h4\" gutterBottom>\n//         Employee List\n//       </Typography>\n\n//       {error && (\n//         <Typography variant=\"body1\" color=\"error\" gutterBottom>\n//           {error}\n//         </Typography>\n//       )}\n\n//       {loading ? (\n//         <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n//           <CircularProgress />\n//         </div>\n//       ) : (\n//         <>\n//           <Box sx={{ mb: 4 }}>\n//             <Typography variant=\"h6\">Salary Summary</Typography>\n//             <Typography variant=\"body1\">Total Salary: ${totalSalary.toLocaleString()}</Typography>\n//             <Typography variant=\"body1\">Average Salary: ${averageSalary}</Typography>\n//             <Typography variant=\"body1\">Highest Salary: ${highestSalary.toLocaleString()}</Typography>\n//           </Box>\n//           <TextField\n//             label=\"Search by Salary\"\n//             variant=\"outlined\"\n//             fullWidth\n//             margin=\"normal\"\n//             value={searchSalary}\n//             onChange={(e) => setSearchSalary(e.target.value)}\n//           />\n//           <Grid container spacing={3} justifyContent=\"center\">\n//             {filteredEmployees.length > 0 ? (\n//               filteredEmployees.map((employee) => (\n//                 <Grid item key={employee.id} xs={12} sm={6} md={4} lg={3}>\n//                   <EmployeeCard employee={employee} />\n//                 </Grid>\n//               ))\n//             ) : (\n//               <Typography variant=\"body1\" align=\"center\">\n//                 No employees found.\n//               </Typography>\n//             )}\n//           </Grid>\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default EmployeeList;","map":{"version":3,"names":[],"sources":["C:/Users/thris/OneDrive/Desktop/EMS/frontend/src/components/EmployeeList.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import employeeService from '../services/employeeService';\r\n// import EmployeeCard from './EmployeeCard';\r\n// import { Grid, CircularProgress, Typography, Box, TextField } from '@mui/material';\r\n\r\n// const EmployeeList = () => {\r\n//   const [employees, setEmployees] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [searchSalary, setSearchSalary] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     fetchEmployees();\r\n//   }, []);\r\n\r\n//   const fetchEmployees = async () => {\r\n//     try {\r\n//       setLoading(true);\r\n//       const response = await employeeService.getAllEmployees();\r\n//       setEmployees(response.data);\r\n//       setError(null);\r\n//     } catch (error) {\r\n//       setError('Failed to fetch employees. Please try again later.');\r\n//       console.error('Error fetching employees:', error);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const calculateSalaryStats = (employees) => {\r\n//     const totalSalary = employees.reduce((sum, emp) => sum + emp.salary, 0);\r\n//     const averageSalary = (totalSalary / employees.length).toFixed(2);\r\n//     const highestSalary = Math.max(...employees.map(emp => emp.salary));\r\n//     return { totalSalary, averageSalary, highestSalary };\r\n//   };\r\n\r\n//   const { totalSalary, averageSalary, highestSalary } = calculateSalaryStats(employees);\r\n\r\n//   const filteredEmployees = employees.filter(emp => emp.salary.toString().includes(searchSalary));\r\n\r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <Typography variant=\"h4\" gutterBottom>\r\n//         Employee List\r\n//       </Typography>\r\n\r\n//       {error && (\r\n//         <Typography variant=\"body1\" color=\"error\" gutterBottom>\r\n//           {error}\r\n//         </Typography>\r\n//       )}\r\n\r\n//       {loading ? (\r\n//         <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n//           <CircularProgress />\r\n//         </div>\r\n//       ) : (\r\n//         <>\r\n//           <Box sx={{ mb: 4 }}>\r\n//             <Typography variant=\"h6\">Salary Summary</Typography>\r\n//             <Typography variant=\"body1\">Total Salary: ${totalSalary.toLocaleString()}</Typography>\r\n//             <Typography variant=\"body1\">Average Salary: ${averageSalary}</Typography>\r\n//             <Typography variant=\"body1\">Highest Salary: ${highestSalary.toLocaleString()}</Typography>\r\n//           </Box>\r\n//           <TextField\r\n//             label=\"Search by Salary\"\r\n//             variant=\"outlined\"\r\n//             fullWidth\r\n//             margin=\"normal\"\r\n//             value={searchSalary}\r\n//             onChange={(e) => setSearchSalary(e.target.value)}\r\n//           />\r\n//           <Grid container spacing={3} justifyContent=\"center\">\r\n//             {filteredEmployees.length > 0 ? (\r\n//               filteredEmployees.map((employee) => (\r\n//                 <Grid item key={employee.id} xs={12} sm={6} md={4} lg={3}>\r\n//                   <EmployeeCard employee={employee} />\r\n//                 </Grid>\r\n//               ))\r\n//             ) : (\r\n//               <Typography variant=\"body1\" align=\"center\">\r\n//                 No employees found.\r\n//               </Typography>\r\n//             )}\r\n//           </Grid>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EmployeeList; "],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}