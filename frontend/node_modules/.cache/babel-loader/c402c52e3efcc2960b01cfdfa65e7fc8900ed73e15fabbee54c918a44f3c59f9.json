{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst apiClient = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nconst employeeService = {\n  // Get all employees\n  getAllEmployees: async () => {\n    try {\n      const response = await apiClient.get('/employees');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching employees:', error);\n      throw error;\n    }\n  },\n  // Get employee by ID\n  getEmployeeById: async id => {\n    try {\n      const response = await apiClient.get(`/employees/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching employee with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  // Create new employee\n  createEmployee: async employeeData => {\n    try {\n      const response = await apiClient.post('/employees', employeeData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating employee:', error);\n      throw error;\n    }\n  },\n  // Update employee\n  updateEmployee: async (id, employeeData) => {\n    try {\n      const response = await apiClient.put(`/employees/${id}`, employeeData);\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating employee with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  // Delete employee\n  deleteEmployee: async id => {\n    try {\n      const response = await apiClient.delete(`/employees/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error deleting employee with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  // Search employees\n  searchEmployees: async params => {\n    try {\n      const response = await apiClient.get('/employees/search', {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error searching employees:', error);\n      throw error;\n    }\n  }\n};\nexport default employeeService;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","headers","employeeService","getAllEmployees","response","get","data","error","console","getEmployeeById","id","createEmployee","employeeData","post","updateEmployee","put","deleteEmployee","delete","searchEmployees","params"],"sources":["C:/Users/thris/OneDrive/Desktop/EMS/frontend/src/services/employeeService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance\r\nconst apiClient = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nconst employeeService = {\r\n  // Get all employees\r\n  getAllEmployees: async () => {\r\n    try {\r\n      const response = await apiClient.get('/employees');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching employees:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get employee by ID\r\n  getEmployeeById: async (id) => {\r\n    try {\r\n      const response = await apiClient.get(`/employees/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error fetching employee with ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Create new employee\r\n  createEmployee: async (employeeData) => {\r\n    try {\r\n      const response = await apiClient.post('/employees', employeeData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating employee:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Update employee\r\n  updateEmployee: async (id, employeeData) => {\r\n    try {\r\n      const response = await apiClient.put(`/employees/${id}`, employeeData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error updating employee with ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Delete employee\r\n  deleteEmployee: async (id) => {\r\n    try {\r\n      const response = await apiClient.delete(`/employees/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error deleting employee with ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Search employees\r\n  searchEmployees: async (params) => {\r\n    try {\r\n      const response = await apiClient.get('/employees/search', { params });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error searching employees:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default employeeService; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;AACA,MAAMC,SAAS,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC7BC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,MAAMC,eAAe,GAAG;EACtB;EACAC,eAAe,EAAE,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,SAAS,CAACO,GAAG,CAAC,YAAY,CAAC;MAClD,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAE,eAAe,EAAE,MAAOC,EAAE,IAAK;IAC7B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMN,SAAS,CAACO,GAAG,CAAC,cAAcK,EAAE,EAAE,CAAC;MACxD,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmCG,EAAE,GAAG,EAAEH,KAAK,CAAC;MAC9D,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAI,cAAc,EAAE,MAAOC,YAAY,IAAK;IACtC,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMN,SAAS,CAACe,IAAI,CAAC,YAAY,EAAED,YAAY,CAAC;MACjE,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAO,cAAc,EAAE,MAAAA,CAAOJ,EAAE,EAAEE,YAAY,KAAK;IAC1C,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMN,SAAS,CAACiB,GAAG,CAAC,cAAcL,EAAE,EAAE,EAAEE,YAAY,CAAC;MACtE,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmCG,EAAE,GAAG,EAAEH,KAAK,CAAC;MAC9D,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAS,cAAc,EAAE,MAAON,EAAE,IAAK;IAC5B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMN,SAAS,CAACmB,MAAM,CAAC,cAAcP,EAAE,EAAE,CAAC;MAC3D,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmCG,EAAE,GAAG,EAAEH,KAAK,CAAC;MAC9D,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAW,eAAe,EAAE,MAAOC,MAAM,IAAK;IACjC,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMN,SAAS,CAACO,GAAG,CAAC,mBAAmB,EAAE;QAAEc;MAAO,CAAC,CAAC;MACrE,OAAOf,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeL,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}